{"version":3,"sources":["Components/AddContact/AddContact.module.css","Components/Contact/Contact.module.css","Components/ContactsList/ContactsList.module.css","Components/transitions/slide.module.css","Components/transitions/pop.module.css","Components/CotactsFilter/Filter.module.css","Components/transitions/backslide.module.css","Components/ErrorNotification/ErrorNotification.module.css","Components/App/App.module.css","Components/Contact/Contact.js","Components/ContactsList/ContactsList.js","Components/AddContact/AddContact.js","Components/CotactsFilter/Filter.js","Components/ErrorNotification/ErrorNotification.js","Components/App/App.js","index.js"],"names":["module","exports","Contact","name","number","onDelete","className","styles","phone","type","onClick","button","ContactsList","contacts","onDeleteContact","TransitionGroup","component","list","map","contact","CSSTransition","key","id","timeout","classNames","popTransition","listItem","App","state","handleChange","e","setState","target","value","onFormSubmit","preventDefault","props","this","onSubmit","form","formLabel","input","onChange","required","Component","Filter","onFilter","label","ErrorNotification","errorBox","filter","showTitle","showError","onAddContact","addingContact","find","setTimeout","contactToAdd","uuidv4","changeFilter","prevProps","prevState","localStorage","setItem","JSON","stringify","getItem","parse","filteredContacts","toLowerCase","includes","onFilterChange","wrapper","in","slideTransition","unmountOnExit","length","backSlideTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46d70360.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__28hhl\",\"formLabel\":\"AddContact_formLabel__3tsF4\",\"input\":\"AddContact_input__1qUiy\",\"button\":\"AddContact_button__390DU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__hox2J\",\"phone\":\"Contact_phone__h36J9\",\"button\":\"Contact_button__39E51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__yu-yR\",\"listItem\":\"ContactsList_listItem__3VPYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2qo-J\",\"enterActive\":\"slide_enterActive__2d5iz\",\"exit\":\"slide_exit__ccE_A\",\"exitActive\":\"slide_exitActive__3cYqV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__KAV5k\",\"enterActive\":\"pop_enterActive__1yqLe\",\"exit\":\"pop_exit__2Y5g7\",\"exitActive\":\"pop_exitActive__1Hbba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2fd2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"backslide_enter__3yIAp\",\"enterActive\":\"backslide_enterActive__1eQNi\",\"exit\":\"backslide_exit__2spy3\",\"exitActive\":\"backslide_exitActive__pJMu3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBox\":\"ErrorNotification_errorBox__3WR1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1Tomc\"};","import React, { Fragment } from \"react\";\r\nimport styles from \"./Contact.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Contact = ({ name, number, onDelete }) => (\r\n  <Fragment>\r\n    <p className={styles.name}>{name}</p>\r\n    <p className={styles.phone}>{number}</p>\r\n    <button type=\"button\" onClick={onDelete} className={styles.button}>\r\n      Delete\r\n    </button>\r\n  </Fragment>\r\n);\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport popTransition from \"../transitions/pop.module.css\";\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.list}>\r\n    {contacts.map((contact) => (\r\n      <CSSTransition key={contact.id} timeout={200} classNames={popTransition}>\r\n        <li key={contact.id} className={styles.listItem}>\r\n          <Contact {...contact} onDelete={() => onDeleteContact(contact.id)} />\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./AddContact.module.css\";\r\nexport default class App extends Component {\r\n  static propTypes = {\r\n    onFormSubmit: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onFormSubmit({ ...this.state });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.onFormSubmit} className={styles.form}>\r\n        <label className={styles.formLabel}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            required\r\n          ></input>\r\n        </label>\r\n        <label className={styles.formLabel}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            required\r\n          ></input>\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onFilter }) => (\r\n  <>\r\n    <label className={styles.label}>\r\n      Find contact by name:\r\n      <input\r\n        type=\"search\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onFilter}\r\n      ></input>\r\n    </label>\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport styles from \"./ErrorNotification.module.css\";\r\n\r\nconst ErrorNotification = () => (\r\n  <div className={styles.errorBox}>\r\n    <p>This contact is already exist</p>\r\n  </div>\r\n);\r\n\r\nexport default ErrorNotification;\r\n","import React, { Component } from \"react\";\r\nimport ContactsList from \"../ContactsList/ContactsList\";\r\nimport AddContact from \"../AddContact/AddContact\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Filter from \"../CotactsFilter/Filter\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport slideTransition from \"../transitions/slide.module.css\";\r\nimport backSlideTransition from \"../transitions/backslide.module.css\";\r\nimport ErrorNotification from \"../ErrorNotification/ErrorNotification\";\r\nimport styles from \"./App.module.css\";\r\n\r\nconst onFilterChange = (contacts, filter) => {\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n};\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n    showTitle: false,\r\n    showError: false,\r\n  };\r\n\r\n  onAddContact = (addingContact) => {\r\n    const { name } = addingContact;\r\n    if (this.state.contacts.find((contact) => contact.name === name)) {\r\n      this.setState({ showError: true });\r\n      setTimeout(() => {\r\n        this.setState({ showError: false });\r\n      }, 2000);\r\n      return;\r\n    }\r\n    const contactToAdd = {\r\n      ...addingContact,\r\n      id: uuidv4(),\r\n    };\r\n    this.setState((state) => ({\r\n      contacts: [...state.contacts, contactToAdd],\r\n    }));\r\n  };\r\n\r\n  changeFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  onDeleteContact = (id) => {\r\n    this.setState((state) => ({\r\n      contacts: state.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ showTitle: true });\r\n    if (localStorage.getItem(\"contacts\")) {\r\n      this.setState({ contacts: JSON.parse(localStorage.getItem(\"contacts\")) });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contacts, filter, showTitle, showError } = this.state;\r\n    const filteredContacts = onFilterChange(contacts, filter);\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <CSSTransition\r\n          in={showTitle}\r\n          timeout={500}\r\n          classNames={slideTransition}\r\n          unmountOnExit\r\n        >\r\n          <h1>Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        <AddContact onFormSubmit={this.onAddContact} />\r\n        <h2>Contacts</h2>\r\n        <CSSTransition\r\n          in={contacts.length >= 2}\r\n          timeout={500}\r\n          classNames={slideTransition}\r\n          unmountOnExit\r\n        >\r\n          <Filter\r\n            value={this.state.filter}\r\n            onFilter={this.changeFilter}\r\n            contacts={contacts}\r\n          />\r\n        </CSSTransition>\r\n\r\n        <ContactsList\r\n          contacts={filteredContacts}\r\n          onDeleteContact={this.onDeleteContact}\r\n        />\r\n\r\n        <CSSTransition\r\n          in={showError}\r\n          timeout={500}\r\n          classNames={backSlideTransition}\r\n          unmountOnExit\r\n        >\r\n          <ErrorNotification />\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}